[{"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\index.js":"1","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\App.js":"2","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\reportWebVitals.js":"3","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\theme.js":"4","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\auth\\loginForm.jsx":"5","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\layout\\box.jsx":"6","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\heading.js":"7","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\card.js":"8","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\styledForm.js":"9","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\layout\\header.jsx":"10","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\layout\\sidebar.jsx":"11","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\form.jsx":"12","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\router\\router.jsx":"13","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\button.js":"14","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\input.jsx":"15","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\layout\\navbar.jsx":"16","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\textArea.jsx":"17","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\select.jsx":"18","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\button.jsx":"19","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\authService.js":"20","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\home.jsx":"21","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\httpService.js":"22","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\dashboardBox.jsx":"23","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\logService.js":"24","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\notFound.jsx":"25","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\auth\\profile.js":"26","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\Backdrop.jsx":"27","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\avatar.jsx":"28","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\patients\\patients.jsx":"29","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\patients\\patientForm.jsx":"30","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\utils\\paginate.js":"31","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\spinner.jsx":"32","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\pagination.jsx":"33","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\notification.jsx":"34","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\styledTable.js":"35","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\patientService.js":"36","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\patients\\patientsTable.jsx":"37","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\popup.jsx":"38","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\searchBox.jsx":"39","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\table.jsx":"40","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\tableBody.jsx":"41","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\utils\\formatDate.js":"42","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\container.js":"43","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\preloadedSelect.jsx":"44","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\tableHeader.jsx":"45","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\styledDashboard.js":"46","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\reactPaginatation.jsx":"47","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\users\\userForm.jsx":"48","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\users\\users.jsx":"49","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\users\\usersTable.jsx":"50","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\userService.js":"51","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\patients\\searchForm.jsx":"52","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labTest\\testCategory\\testCategory.jsx":"53","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\testCategoryService.js":"54","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labTest\\testCategory\\testCategoryList.jsx":"55","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\lists.js":"56","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labTest\\testCategory\\testCategoryForm.jsx":"57","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labTest\\testType\\testType.jsx":"58","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\testTypeService.js":"59","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labTest\\testType\\testTypeList.jsx":"60","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labTest\\testType\\testTypeForm.jsx":"61","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labs\\labRequest\\labRequests.jsx":"62","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\labRequestService.js":"63","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labs\\labRequest\\labRequestForm.jsx":"64","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labs\\labRequest\\labRequestCard.jsx":"65","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\multiSelect.jsx":"66","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\fullScreenDialog.jsx":"67","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labs\\labResult\\labResultForm.jsx":"68","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\labResultService.js":"69"},{"size":755,"mtime":1612036335784,"results":"70","hashOfConfig":"71"},{"size":1149,"mtime":1613844725627,"results":"72","hashOfConfig":"71"},{"size":362,"mtime":499162500000,"results":"73","hashOfConfig":"71"},{"size":1712,"mtime":1612690627790,"results":"74","hashOfConfig":"71"},{"size":3126,"mtime":1613844453100,"results":"75","hashOfConfig":"71"},{"size":1288,"mtime":1612034925474,"results":"76","hashOfConfig":"71"},{"size":442,"mtime":1612114272811,"results":"77","hashOfConfig":"71"},{"size":647,"mtime":1612018784674,"results":"78","hashOfConfig":"71"},{"size":3713,"mtime":1612617909747,"results":"79","hashOfConfig":"71"},{"size":2080,"mtime":1612118915281,"results":"80","hashOfConfig":"71"},{"size":2215,"mtime":1612034912267,"results":"81","hashOfConfig":"71"},{"size":5328,"mtime":1613842912952,"results":"82","hashOfConfig":"71"},{"size":1512,"mtime":1613844520333,"results":"83","hashOfConfig":"71"},{"size":2248,"mtime":1612133574420,"results":"84","hashOfConfig":"71"},{"size":751,"mtime":1612113166134,"results":"85","hashOfConfig":"71"},{"size":2241,"mtime":1612531617003,"results":"86","hashOfConfig":"71"},{"size":591,"mtime":1612018497564,"results":"87","hashOfConfig":"71"},{"size":1042,"mtime":1612117347404,"results":"88","hashOfConfig":"71"},{"size":769,"mtime":1612111164812,"results":"89","hashOfConfig":"71"},{"size":954,"mtime":1612046848705,"results":"90","hashOfConfig":"71"},{"size":2956,"mtime":1613845526625,"results":"91","hashOfConfig":"71"},{"size":756,"mtime":1612021062571,"results":"92","hashOfConfig":"71"},{"size":662,"mtime":1613845729047,"results":"93","hashOfConfig":"71"},{"size":527,"mtime":1612021081979,"results":"94","hashOfConfig":"71"},{"size":118,"mtime":1612020988652,"results":"95","hashOfConfig":"71"},{"size":1478,"mtime":1612032520452,"results":"96","hashOfConfig":"71"},{"size":764,"mtime":1612018242531,"results":"97","hashOfConfig":"71"},{"size":424,"mtime":1612032662453,"results":"98","hashOfConfig":"71"},{"size":4049,"mtime":1612352572520,"results":"99","hashOfConfig":"71"},{"size":5449,"mtime":1612127427799,"results":"100","hashOfConfig":"71"},{"size":199,"mtime":1612021145312,"results":"101","hashOfConfig":"71"},{"size":630,"mtime":1613845676368,"results":"102","hashOfConfig":"71"},{"size":1035,"mtime":1612018329938,"results":"103","hashOfConfig":"71"},{"size":568,"mtime":1612018309232,"results":"104","hashOfConfig":"71"},{"size":1501,"mtime":1612018922999,"results":"105","hashOfConfig":"71"},{"size":669,"mtime":1612034244973,"results":"106","hashOfConfig":"71"},{"size":3896,"mtime":1612135042303,"results":"107","hashOfConfig":"71"},{"size":1372,"mtime":1612615608386,"results":"108","hashOfConfig":"71"},{"size":1864,"mtime":1612114078503,"results":"109","hashOfConfig":"71"},{"size":500,"mtime":1612613484315,"results":"110","hashOfConfig":"71"},{"size":1492,"mtime":1612119092169,"results":"111","hashOfConfig":"71"},{"size":240,"mtime":1612123607958,"results":"112","hashOfConfig":"71"},{"size":4704,"mtime":1613813061836,"results":"113","hashOfConfig":"71"},{"size":739,"mtime":1612610250577,"results":"114","hashOfConfig":"71"},{"size":1182,"mtime":1612119108764,"results":"115","hashOfConfig":"71"},{"size":1846,"mtime":1612037713302,"results":"116","hashOfConfig":"71"},{"size":2070,"mtime":1612094309753,"results":"117","hashOfConfig":"71"},{"size":4451,"mtime":1612177694902,"results":"118","hashOfConfig":"71"},{"size":3674,"mtime":1612352629204,"results":"119","hashOfConfig":"71"},{"size":2340,"mtime":1612176490862,"results":"120","hashOfConfig":"71"},{"size":884,"mtime":1612106958707,"results":"121","hashOfConfig":"71"},{"size":2719,"mtime":1612134208268,"results":"122","hashOfConfig":"71"},{"size":1388,"mtime":1612468562566,"results":"123","hashOfConfig":"71"},{"size":726,"mtime":1612453605111,"results":"124","hashOfConfig":"71"},{"size":2399,"mtime":1612531157084,"results":"125","hashOfConfig":"71"},{"size":1143,"mtime":1612465626068,"results":"126","hashOfConfig":"71"},{"size":3322,"mtime":1612473630878,"results":"127","hashOfConfig":"71"},{"size":1306,"mtime":1612470327007,"results":"128","hashOfConfig":"71"},{"size":668,"mtime":1612469853085,"results":"129","hashOfConfig":"71"},{"size":2646,"mtime":1613826261113,"results":"130","hashOfConfig":"71"},{"size":4283,"mtime":1612528929010,"results":"131","hashOfConfig":"71"},{"size":1579,"mtime":1613812767223,"results":"132","hashOfConfig":"71"},{"size":705,"mtime":1613822816793,"results":"133","hashOfConfig":"71"},{"size":6914,"mtime":1613814262225,"results":"134","hashOfConfig":"71"},{"size":5436,"mtime":1613813083744,"results":"135","hashOfConfig":"71"},{"size":790,"mtime":1612626880703,"results":"136","hashOfConfig":"71"},{"size":2073,"mtime":1613238760092,"results":"137","hashOfConfig":"71"},{"size":5527,"mtime":1613835198355,"results":"138","hashOfConfig":"71"},{"size":711,"mtime":1613845950861,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"eih1l9",{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"142"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"142"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"142"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"142"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"142"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"142"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"142"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"142"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"142"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\index.js",[],["289","290"],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\App.js",["291"],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\reportWebVitals.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\theme.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\auth\\loginForm.jsx",["292","293"],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\layout\\box.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\heading.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\card.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\styledForm.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\layout\\header.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\layout\\sidebar.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\form.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\router\\router.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\button.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\input.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\layout\\navbar.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\textArea.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\select.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\button.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\authService.js",["294"],"import JwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = `${apiUrl}/auth/login`;\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getToken());\r\n\r\nexport async function login(username, password) {\r\n  const { headers } = await http.post(apiEndpoint, {\r\n    username: username,\r\n    password: password,\r\n  });\r\n  const jwt = headers.authorization.split(\" \")[1];\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\n// export function loginWithJwt(jwt) {\r\n//   localStorage.setItem(tokenKey, jwt);\r\n// }\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return JwtDecode(jwt);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction getToken() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  getToken\r\n};\r\n","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\home.jsx",["295"],"import React, { Component } from \"react\";\r\nimport { StyledChart, StyledFlex } from \"./styled-components/container\";\r\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\";\r\nimport SpeakerNotesOutlinedIcon from \"@material-ui/icons/SpeakerNotesOutlined\";\r\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport DashboardBox from \"./dashboardBox\";\r\nimport { getUsers } from \"../services/userService\";\r\nimport { filterPatients, getPatients } from \"../services/patientService\";\r\nimport { formatDateY } from \"../utils/formatDate\";\r\nimport Spinner from \"./common/spinner\";\r\n// import LineChart from \"./chart/lineChart\";\r\n// import BarChart from \"./chart/barChart\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    numberOfUsers: \"\",\r\n    numberOfPatients: \"\",\r\n    numberOfLabs: \"\",\r\n    numberOfTodaysPatient: \"\",\r\n    loading: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loading: true });\r\n    try {\r\n      const { data: users } = await getUsers(\"isActive=true\");\r\n      const { data: patients } = await getPatients();\r\n      const { data: todaysPatients } = await filterPatients(\r\n        `createdAt=${formatDateY(new Date())}`\r\n      );\r\n\r\n      this.setState({\r\n        numberOfUsers: users.count,\r\n        numberOfPatients: patients.count,\r\n        numberOfTodaysPatient: todaysPatients.count,\r\n        loading: false,\r\n      });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 401) {\r\n        console.log(\"TOKEN EXPIRED\");\r\n        localStorage.removeItem(\"token\");\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      numberOfUsers,\r\n      numberOfPatients,\r\n      numberOfLabs,\r\n      numberOfTodaysPatient,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <StyledFlex>\r\n          <DashboardBox\r\n            blue\r\n            label=\"Patients\"\r\n            value={numberOfPatients ? numberOfPatients : 0}\r\n            icon={<PeopleAltOutlinedIcon />}\r\n            loading={loading}\r\n          />\r\n          <DashboardBox\r\n            black\r\n            label=\"Lab Reports\"\r\n            value={numberOfLabs ? numberOfLabs : 0}\r\n            icon={<SpeakerNotesOutlinedIcon />}\r\n            loading={loading}\r\n          />\r\n          <DashboardBox\r\n            blue\r\n            label=\"Today's Patients\"\r\n            value={numberOfTodaysPatient ? numberOfTodaysPatient : 0}\r\n            icon={<PeopleAltOutlinedIcon />}\r\n            loading={loading}\r\n          />\r\n          <DashboardBox\r\n            black\r\n            label=\"Active Users\"\r\n            value={numberOfUsers ? numberOfUsers : 0}\r\n            icon={<SupervisedUserCircleIcon />}\r\n            loading={loading}\r\n          />\r\n        </StyledFlex>\r\n\r\n        <StyledFlex>\r\n          <StyledChart>{/* <LineChart /> */}</StyledChart>\r\n          <StyledChart>{/* <BarChart /> */}</StyledChart>\r\n        </StyledFlex>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\httpService.js",["296"],"import Axios from \"axios\";\r\nimport logger from \"./logService\";\r\n\r\n// Axios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\r\n\r\nAxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setContentType(type = 'application/json') {\r\n  Axios.defaults.headers.post['Content-Type'] = type;\r\n}\r\n\r\nfunction setJwt(jwt) {\r\n  Axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + jwt;\r\n}\r\n\r\nexport default {\r\n  get: Axios.get,\r\n  post: Axios.post,\r\n  put: Axios.put,\r\n  delete: Axios.delete,\r\n  setJwt,\r\n  setContentType,\r\n};\r\n","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\dashboardBox.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\logService.js",["297"],"// import * as Sentry from \"@sentry/react\";\r\n// import { Integrations } from \"@sentry/tracing\";\r\n\r\nfunction init() {\r\n    // Sentry.init({\r\n    //   dsn:\r\n    //     \"https://0a26079e4c414c5e8c046e3ab9773788@o452708.ingest.sentry.io/5440543\",\r\n    //   integrations: [new Integrations.BrowserTracing()],\r\n    //   tracesSampleRate: 1.0,\r\n    // });\r\n  }\r\n  \r\n  function log(error) {\r\n    console.warn(\"ERROR OCCURED: \", error);\r\n    // Sentry.captureException(error);\r\n  }\r\n  \r\n  export default {\r\n    init,\r\n    log,\r\n  };\r\n  ","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\notFound.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\auth\\profile.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\Backdrop.jsx",["298","299"],"import React from \"react\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nexport default function BackdropLoader() {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={true} onClick={handleClose}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\avatar.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\patients\\patients.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\patients\\patientForm.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\utils\\paginate.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\spinner.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\pagination.jsx",["300"],"import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StyledPage } from \"./../styled-components/styledTable\";\r\nimport { TablePagination } from \"@material-ui/core\";\r\n\r\nconst Pagination = ({ itemCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(itemCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"pagination-ul\">\r\n        {pages.map((page) => (\r\n          <StyledPage\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n            onClick={() => onPageChange(page)}\r\n          >\r\n            {page}\r\n          </StyledPage>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\notification.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\styledTable.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\patientService.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\patients\\patientsTable.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\popup.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\searchBox.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\table.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\tableBody.jsx",["301","302"],"import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { StyledBadge } from \"../styled-components/container\";\r\nimport { formatDate } from \"../../utils/formatDate\";\r\nimport { Checkbox, TableBody, TableCell, TableRow } from \"@material-ui/core\";\r\n\r\nclass TBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    const cellData = _.get(item, column.path);\r\n    if (cellData === true) return <StyledBadge approved>Active</StyledBadge>;\r\n    else if (cellData === false)\r\n      return <StyledBadge inactive>InActive</StyledBadge>;\r\n    else if (typeof cellData === \"string\" && cellData.includes(\".000Z\"))\r\n      return formatDate(cellData);\r\n    return cellData;\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <TableBody>\r\n        {data.map((item) => (\r\n          <TableRow key={item.id}>\r\n            \r\n            {columns.map((column) => (\r\n              <TableCell key={item.id + (column.path || column.key)}>\r\n                {this.renderCell(item, column)}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TBody;\r\n\r\n{\r\n  /* <tbody>\r\n{data.map((item) => (\r\n  <StyledTr key={item.id}>\r\n    {columns.map((column) => (\r\n      <StyledTd key={item.id + (column.path || column.key)}>\r\n        {this.renderCell(item, column)}\r\n      </StyledTd>\r\n    ))}\r\n  </StyledTr>\r\n))}\r\n</tbody> */\r\n}\r\n","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\utils\\formatDate.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\container.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\preloadedSelect.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\tableHeader.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\styledDashboard.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\reactPaginatation.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\users\\userForm.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\users\\users.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\users\\usersTable.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\userService.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\patients\\searchForm.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labTest\\testCategory\\testCategory.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\testCategoryService.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labTest\\testCategory\\testCategoryList.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\styled-components\\lists.js",[],["303","304"],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labTest\\testCategory\\testCategoryForm.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labTest\\testType\\testType.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\testTypeService.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labTest\\testType\\testTypeList.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labTest\\testType\\testTypeForm.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labs\\labRequest\\labRequests.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\labRequestService.js",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labs\\labRequest\\labRequestForm.jsx",["305"],"import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport BackdropLoader from \"../../common/Backdrop\";\r\nimport Form from \"../../common/form\";\r\nimport Notification from \"../../common/notification\";\r\nimport Spinner from \"../../common/spinner\";\r\nimport { StyledFormContainer } from \"../../styled-components/styledForm\";\r\nimport {\r\n  getLabRequest,\r\n  saveLabRequest,\r\n} from \"../../../services/labRequestService\";\r\nimport { getTestCategories } from \"../../../services/testCategoryService\";\r\nimport { getPatients } from \"../../../services/patientService\";\r\nimport { getTestTypes } from \"../../../services/testTypeService\";\r\nimport { StyledFlex } from \"../../styled-components/container\";\r\nconst Joi = require(\"joi-browser\");\r\n\r\nclass LabRequestForm extends Form {\r\n  state = {\r\n    data: {\r\n      patientId: \"\",\r\n      testCategoryId: [],\r\n      testTypeId: [],\r\n      status: \"\",\r\n    },\r\n    patientOptions: [],\r\n    testCategoryOptions: [],\r\n    testTypeOptions: [],\r\n    errors: {},\r\n    loading: false,\r\n    backdrop: false,\r\n    message: \"\",\r\n  };\r\n\r\n  schema = {\r\n    // type: Joi.boolean().label(\"Test Type\"),\r\n  };\r\n\r\n  populateLabRequest = async () => {\r\n    try {\r\n      const labTestId = this.props.id;\r\n      if (labTestId === \"\") {\r\n        this.setState({ loading: false });\r\n        return;\r\n      }\r\n\r\n      const { data: labRequests } = await getLabRequest(labTestId);\r\n\r\n      this.setState({ data: this.mapToViewModel(labRequests), loading: false });\r\n    } catch (ex) {\r\n      this.props.history.replace(\"/not-found\");\r\n    }\r\n  };\r\n\r\n  async getPatientOptions() {\r\n    this.setState({ loading: true });\r\n    const { data } = await getPatients();\r\n    const options = data.patients.map((d) => ({\r\n      value: d.id,\r\n      label: `${d.cardNumber} | ${d.firstName} ${d.fatherName}`,\r\n    }));\r\n    this.setState({ patientOptions: options });\r\n  }\r\n\r\n  async getTestCategoryOptions() {\r\n    this.setState({ loading: true });\r\n    const { data } = await getTestCategories();\r\n    const options = data.testCategories.map((d) => ({\r\n      value: d.id,\r\n      label: `${d.name}`,\r\n    }));\r\n    this.setState({ testCategoryOptions: options });\r\n  }\r\n\r\n  async getTestTypeOptions() {\r\n    this.setState({ loading: true });\r\n    const { data } = await getTestTypes();\r\n    const options = data.testTypes.map((d) => ({\r\n      value: d.id,\r\n      label: d.name,\r\n      category: d.testCategoryId,\r\n    }));\r\n    this.setState({ testTypeOptions: options });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getTestCategoryOptions();\r\n    await this.getTestTypeOptions();\r\n    await this.getPatientOptions();\r\n    await this.populateLabRequest();\r\n  }\r\n\r\n  mapToViewModel = (labRequest) => {\r\n    return {\r\n      id: labRequest.id,\r\n    };\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const data = { ...this.state.data };\r\n\r\n    let typeId = [];\r\n\r\n    _.forEach(\r\n      _.keys(\r\n        _.pickBy(\r\n          _.pickBy(data, function (value, key) {\r\n            return _.startsWith(key, \"type\");\r\n          }),\r\n          function (value, key) {\r\n            return value === true;\r\n          }\r\n        )\r\n      ),\r\n      function (value) {\r\n        typeId.push(parseInt(_.replace(value, \"type\", \"\")));\r\n      }\r\n    );\r\n\r\n    const newData = {\r\n      testTypesId: _.toString(typeId),\r\n      patientId: data.patientId,\r\n    };\r\n\r\n    console.log(\"NEW DATA\", newData);\r\n\r\n    this.setState({ backdrop: true });\r\n    try {\r\n      const { data: labRequest } = await saveLabRequest(newData);\r\n\r\n      this.setState({\r\n        message: labRequest.result\r\n          ? \"Lab Request updated Successfully\"\r\n          : \"Lab Request created Successfully\",\r\n        messageType: \"success\",\r\n        messageTitle: \"Success\",\r\n        backdrop: false,\r\n      });\r\n      console.log(\"Saved\");\r\n\r\n      this.props.setOpenPopup(false);\r\n      this.props.setId(\"\");\r\n      this.props.onUpdated();\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status !== 200) {\r\n        const error = ex.response.data;\r\n        this.setState({\r\n          message: error.message,\r\n          messageType: \"danger\",\r\n          messageTitle: \"Error\",\r\n          backdrop: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      backdrop,\r\n      loading,\r\n      message,\r\n      messageType,\r\n      messageTitle,\r\n      data,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        {backdrop && <BackdropLoader />}\r\n        {loading && <Spinner />}\r\n        {!loading && (\r\n          <>\r\n            {message && this.props.openPopup && (\r\n              <Notification\r\n                title={messageTitle}\r\n                message={message}\r\n                type={messageType}\r\n              />\r\n            )}\r\n            <StyledFormContainer fullWidth>\r\n              <form onSubmit={this.handleSubmit}>\r\n                {this.renderPreloadedSelect(\r\n                  \"patientId\",\r\n                  \"Patient\",\r\n                  this.state.patientOptions\r\n                )}\r\n                {this.renderMultiSelect(\r\n                  \"testCategoryId\",\r\n                  \"Test Category\",\r\n                  this.state.testCategoryOptions\r\n                )}\r\n                <StyledFlex wrapFlex>\r\n                  {!_.isEmpty(data.testCategoryId) &&\r\n                    data.testCategoryId.map((testCategory) => {\r\n                      return (\r\n                        <div\r\n                          key={testCategory}\r\n                          style={{\r\n                            padding: \"1rem\",\r\n                            borderLeft: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n                          }}\r\n                        >\r\n                          <strong>\r\n                            {\r\n                              _.find(this.state.testCategoryOptions, [\r\n                                \"value\",\r\n                                testCategory,\r\n                              ]).label\r\n                            }\r\n                          </strong>\r\n\r\n                          {_.filter(this.state.testTypeOptions, [\r\n                            \"category\",\r\n                            testCategory.toString(),\r\n                          ]).map((testType) => {\r\n                            return (\r\n                              <div key={testType.value}>\r\n                                {this.renderCheckBox(\r\n                                  `type${testType.value}`,\r\n                                  `${testType.label}`\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </StyledFlex>\r\n                {this.renderButton(\"Submit Request\")}\r\n              </form>\r\n            </StyledFormContainer>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabRequestForm;\r\n","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labs\\labRequest\\labRequestCard.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\multiSelect.jsx",["306"],"import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport _ from \"lodash\";\r\n\r\nconst getIndex = (options, value) => {\r\n  return _.findIndex(options, function (option) {\r\n    // eslint-disable-next-line eqeqeq\r\n    return option.value == value;\r\n  });\r\n};\r\n\r\nconst MultiSelect = ({ placeholder, options, value, ...rest }) => {\r\n  return (\r\n    <>\r\n      <div className=\"field-div\">\r\n        <Select\r\n          options={options}\r\n          placeholder={`Select ${placeholder}`}\r\n          isMulti\r\n          closeMenuOnSelect={false}\r\n          {...rest}\r\n          // value={options ? options[getIndex(options, value)] : \"\"}\r\n          // selectValue={options ? options[getIndex(options, value)] : \"\"}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MultiSelect;\r\n","D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\common\\fullScreenDialog.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\components\\labs\\labResult\\labResultForm.jsx",[],"D:\\workspaces\\React\\Addis Poly\\addis-poly-client\\src\\services\\labResultService.js",[],{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","severity":1,"message":"312","line":3,"column":8,"nodeType":"313","messageId":"314","endLine":3,"endColumn":12},{"ruleId":"311","severity":1,"message":"315","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":20},{"ruleId":"311","severity":1,"message":"316","line":6,"column":10,"nodeType":"313","messageId":"314","endLine":6,"endColumn":17},{"ruleId":"317","severity":1,"message":"318","line":40,"column":1,"nodeType":"319","endLine":45,"endColumn":3},{"ruleId":"311","severity":1,"message":"320","line":10,"column":8,"nodeType":"313","messageId":"314","endLine":10,"endColumn":15},{"ruleId":"317","severity":1,"message":"318","line":26,"column":1,"nodeType":"319","endLine":33,"endColumn":3},{"ruleId":"317","severity":1,"message":"318","line":18,"column":3,"nodeType":"319","endLine":21,"endColumn":5},{"ruleId":"311","severity":1,"message":"321","line":4,"column":8,"nodeType":"313","messageId":"314","endLine":4,"endColumn":14},{"ruleId":"311","severity":1,"message":"322","line":17,"column":10,"nodeType":"313","messageId":"314","endLine":17,"endColumn":14},{"ruleId":"311","severity":1,"message":"323","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":25},{"ruleId":"311","severity":1,"message":"324","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":18},{"ruleId":"325","severity":1,"message":"326","line":40,"column":1,"nodeType":"327","messageId":"328","endLine":52,"endColumn":2},{"ruleId":"307","replacedBy":"329"},{"ruleId":"309","replacedBy":"330"},{"ruleId":"311","severity":1,"message":"331","line":16,"column":7,"nodeType":"313","messageId":"314","endLine":16,"endColumn":10},{"ruleId":"311","severity":1,"message":"332","line":5,"column":7,"nodeType":"313","messageId":"314","endLine":5,"endColumn":15},"no-native-reassign",["333"],"no-negated-in-lhs",["334"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'StyledCard' is defined but never used.","'Message' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Spinner' is defined but never used.","'Button' is defined but never used.","'open' is assigned a value but never used.","'TablePagination' is defined but never used.","'Checkbox' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["333"],["334"],"'Joi' is assigned a value but never used.","'getIndex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]